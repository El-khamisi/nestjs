name: Build && Deploy Dendont-backend-nodejs

on:
  push:
    branches: ["master", "workflows"]

# env:
#   PORT=${{secrets.PORT}}
#   DATABASE_URL=${{secrets.DATABASE_URL}}
#   SALT_ROUNDS=${{secrets.SALT_ROUNDS}}
#   TOKEN_SECRET=${{secrets.TOKEN_SECRET}}
#   TOKEN_SHORT_EXPIRY=${{secrets.TOKEN_SHORT_EXPIRY}}


jobs:
  # auto-format:
  #   runs-on: ubuntu-latest

  #   steps:
  #   - uses: actions/checkout@master
  #   - name: Run Lint && Prettier Formatter
  #     run: |
  #       npm i @typescript-eslint/eslint-plugin @typescript-eslint/parser
  #       npm i eslint eslint-config-prettier eslint-plugin-prettier prettier
  #       npm run lint
  #       npm run format

  #   - name: Commit & Push changes
  #     id: auto-commit
  #     uses: stefanzweifel/git-auto-commit-action@v4
  #     with:
  #       commit_message: Apply Lint&&Prettier Formatting

  #   - name: "Run if changes have been detected"
  #     if: steps.auto-commit.outputs.changes_detected == 'true'
  #     run: echo "Formatted"

  #   - name: "Run if no changes have been detected"
  #     if: steps.auto-commit.outputs.changes_detected == 'false'
  #     run: echo "No Changes!"


  init-env:
    runs-on: ubuntu-latest
    # needs: [auto-format]

    steps:
    - uses: actions/checkout@master
    - name: Setup && Test Node.js environment
      uses: actions/setup-node@master
      with:
        node-version: 16
        check-latest: true
    - run: |
        npm ci
        npm run test:e2e

  dockerzing:
    runs-on: ubuntu-latest

    steps: 
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build the Docker image and push it
        run:  |
          echo ${GITHUB_REPOSITORY,,}
          docker build -t ${GITHUB_REPOSITORY,,} .
          docker push ghcr.io/${{ github.actor }}/${GITHUB_REPOSITORY,,}:latest



    
